{
  "methods": {
    "animateTo(com.google.android.maps.GeoPoint)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "geoPoint"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "animateTo(com.google.android.maps.GeoPoint)"
    },
    "animateTo(com.google.android.maps.GeoPoint,java.lang.Runnable)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "geoPoint",
        "runnable"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "animateTo(com.google.android.maps.GeoPoint,java.lang.Runnable)"
    },
    "getGeoPointAnimatedTo()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "com.google.android.maps.GeoPoint",
      "exceptions": [],
      "name": "getGeoPointAnimatedTo()",
      "documentation": "Non-Android accessor that returns the most recent value set by a call to either version of {@code animateTo()}\n\n@return the most recent value set by a call to either version of {@code animateTo()}\n"
    },
    "getShadowMapView()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.maps.ShadowMapView",
      "exceptions": [],
      "name": "getShadowMapView()",
      "documentation": "Non-Android accessor that returns the {@code MapView} that is being controlled\n\n@return the {@code MapView} that is being controlled\n"
    },
    "setCenter(com.google.android.maps.GeoPoint)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "geoPoint"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCenter(com.google.android.maps.GeoPoint)"
    },
    "setShadowMapView(org.robolectric.shadows.maps.ShadowMapView)": {
      "isImplementation": false,
      "modifiers": [],
      "params": [
        "shadowMapView"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setShadowMapView(org.robolectric.shadows.maps.ShadowMapView)",
      "documentation": "Non-Android accessor that allows the {@code MapView} being controlled to be set explicitly.\n\n@param shadowMapView the {@link ShadowMapView} to be controlled (either created explicitly or obtained via a call\n                     to {@link org.robolectric.RobolectricForMaps.shadowOf(com.google.android.maps.MapView)})\n"
    },
    "setZoom(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "i"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "setZoom(int)"
    },
    "zoomIn()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "zoomIn()"
    },
    "zoomOut()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "zoomOut()"
    },
    "zoomToSpan(int,int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "latSpan",
        "lngSpan"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "zoomToSpan(int,int)"
    }
  },
  "imports": [
    "com.google.android.maps.GeoPoint",
    "com.google.android.maps.MapController",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements"
  ],
  "name": "org.robolectric.shadows.maps.ShadowMapController",
  "documentation": "Shadow for {@link com.google.android.maps.MapController}.\n"
}