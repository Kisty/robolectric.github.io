{
  "methods": {
    "clearStartedServices()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "documentation": "Non-android accessor that delefates to the application to clear the stack of started\nservice intents.",
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "clearStartedServices()"
    },
    "denyPermissions(java.lang.String...)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "permissionNames"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "denyPermissions(java.lang.String...)"
    },
    "getBroadcastIntents()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.content.Intent\u003e",
      "exceptions": [],
      "name": "getBroadcastIntents()"
    },
    "getNextStartedActivity()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "documentation": "Non-Android accessor that delegates to the application to consume and return the next {@code Intent} on the\nstarted activities stack.\n\n@return the next started {@code Intent} for an activity",
      "params": [],
      "returnType": "android.content.Intent",
      "exceptions": [],
      "name": "getNextStartedActivity()"
    },
    "getNextStartedService()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "documentation": "Non-Android accessor that delegates to the application to consume and return the next {@code Intent} on the\nstarted services stack.\n\n@return the next started {@code Intent} for a service",
      "params": [],
      "returnType": "android.content.Intent",
      "exceptions": [],
      "name": "getNextStartedService()"
    },
    "getNextStoppedService()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "documentation": "Non-Android accessor that delegates to the application to return the next {@code Intent} to stop\na service (irrespective of if the service was running)\n\n@return {@code Intent} for the next service requested to be stopped",
      "params": [],
      "returnType": "android.content.Intent",
      "exceptions": [],
      "name": "getNextStoppedService()"
    },
    "grantPermissions(java.lang.String...)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "permissionNames"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "grantPermissions(java.lang.String...)"
    },
    "peekNextStartedActivity()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "documentation": "Non-Android accessor that delegates to the application to return (without consuming) the next {@code Intent} on\nthe started activities stack.\n\n@return the next started {@code Intent} for an activity",
      "params": [],
      "returnType": "android.content.Intent",
      "exceptions": [],
      "name": "peekNextStartedActivity()"
    },
    "peekNextStartedService()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "documentation": "Return (without consuming) the next {@code Intent} on the started services stack.\n\n@return the next started {@code Intent} for a service",
      "params": [],
      "returnType": "android.content.Intent",
      "exceptions": [],
      "name": "peekNextStartedService()"
    }
  },
  "documentation": " Shadow for {@link android.content.ContextWrapper}.\n",
  "name": "org.robolectric.shadows.ShadowContextWrapper"
}