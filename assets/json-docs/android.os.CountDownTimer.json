{
  "methods": {
    "__constructor__(long,long)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "millisInFuture",
        "countDownInterval"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "__constructor__(long,long)"
    },
    "cancel()": {
      "isImplementation": true,
      "modifiers": [
        "public",
        "final"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "cancel()"
    },
    "getCountDownInterval()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "long",
      "exceptions": [],
      "name": "getCountDownInterval()"
    },
    "getMillisInFuture()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "long",
      "exceptions": [],
      "name": "getMillisInFuture()"
    },
    "hasStarted()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "hasStarted()"
    },
    "invokeFinish()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "invokeFinish()"
    },
    "invokeTick(long)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "millisUntilFinished"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "invokeTick(long)"
    },
    "start()": {
      "isImplementation": true,
      "modifiers": [
        "public",
        "final",
        "synchronized"
      ],
      "params": [],
      "returnType": "android.os.CountDownTimer",
      "exceptions": [],
      "name": "start()"
    }
  },
  "documentation": " Shadow for {@link android.os.CountDownTimer}.\n",
  "name": "org.robolectric.shadows.ShadowCountDownTimer"
}